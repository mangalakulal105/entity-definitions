requestsPerSecond:
  title: Requests per second
  unit: REQUESTS_PER_SECOND
  queries:
    newRelic:
      select: average(net.requestsPerSecond)
      from: ApacheSample
      eventId: entityGuid
      eventName: entityName
    # defaulting to newRelic query for now since we cannot match value functions for OpenTelemetry cumulative metrics.
    # opentelemetry:
    #   select: average(apache.requests)
    #   from: Metric
    #   eventId: entityGuid
    #   eventName: entityName
totalBytesSentPerSecond:
  title: Total bytes sent per second
  unit: BYTES_PER_SECOND
  queries:
    newRelic:
      select: average(net.bytesPerSecond)
      from: ApacheSample
      eventId: entityGuid
      eventName: entityName
    # defaulting to newRelic query for now since we cannot match value functions for OpenTelemetry cumulative metrics.
    # opentelemetry:
    #   select: average(apache.traffic) / 60
    #   from: Metric
    #   eventId: entityGuid
    #   eventName: entityName
busyWorkers:
  title: Current number of busy workers
  unit: COUNT
  queries:
    newRelic:
      select: average(server.busyWorkers)
      from: ApacheSample
      eventId: entityGuid
      eventName: entityName
    opentelemetry:
      select: average(apache.workers)
      from: Metric
      where: state = 'busy'
      eventId: entityGuid
      eventName: entityName
idleWorkers:
  title: Current number of idle workers
  unit: COUNT
  queries:
    newRelic:
      select: average(server.idleWorkers)
      from: ApacheSample
      eventId: entityGuid
      eventName: entityName
    opentelemetry:
      select: average(apache.workers)
      from: Metric
      where: state = 'idle'
      eventId: entityGuid
      eventName: entityName