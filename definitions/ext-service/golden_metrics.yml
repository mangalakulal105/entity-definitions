throughput:
  title: Throughput
  queries:
    opentelemetry:
      select: count(*)
      from: Span
      where: span.kind LIKE 'server' OR span.kind LIKE 'consumer' OR kind LIKE 'server' OR kind LIKE 'consumer'
    kamon-agent:
      select: sum(http.server.requests)
      from: Metric
    micrometer:
      select: count(http.server.requests)
      from: Metric
errorRate:
  title: Error rate
  queries:
    opentelemetry:
      select: filter(count(*), where error.message IS NOT NULL) / count(*)
      from: Span
    kamon-agent:
      select: sum(http.server.requests)
      from: Metric
      where: http.status_code = '5xx'
    micrometer:
      select: count(http.server.requests)
      from: Metric
      where: exception IS NOT NULL and exception != 'None'
responseTimeMs:
  title: Response time (ms)
  queries:
    opentelemetry:
      select: average(duration.ms)
      from: Span
      where: span.kind LIKE 'server' OR span.kind LIKE 'consumer' OR kind LIKE 'server' OR kind LIKE 'consumer'
    kamon-agent:
      select: average(http.server.requests)
      from: Metric
    micrometer:
      select: average(http.server.requests)
      from: Metric
